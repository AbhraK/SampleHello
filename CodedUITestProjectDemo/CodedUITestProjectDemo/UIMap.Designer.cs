// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProjectDemo
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
       
        /// <summary>
        /// Painting
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WinClient uIUntitledPaintClient = this.UIUntitledPaintWindow.UIItemWindow.UIUntitledPaintClient;
            WinButton uIFillwithcolorButton = this.UIUntitledPaintWindow.UIItemWindow1.UIToolsToolBar.UIFillwithcolorButton;
            WinClient uIUntitledPaintClient1 = this.UIUntitledPaintWindow.UIItemWindow2.UIUntitledPaintClient;
            WinGroup uIItemGroup = this.UIUntitledPaintWindow.UIItemWindow1.UIColorsToolBar.UIItemGroup;
            WinListItem uIOvalListItem = this.UIUntitledPaintWindow.UIItemWindow1.UIShapesClient.UIOvalListItem;
            #endregion

            // Click 'Untitled - Paint' client
            Mouse.Click(uIUntitledPaintClient, new Point(405, 20));

            // Click 'Fill with color' button
            Mouse.Click(uIFillwithcolorButton, new Point(22, 15));

            // Click 'Untitled - Paint' client
            Mouse.Click(uIUntitledPaintClient1, new Point(289, 64));

            // Click group
            Mouse.Click(uIItemGroup, new Point(84, 12));

            // Click 'Oval' list item
            Mouse.Click(uIOvalListItem, new Point(13, 7));

            // Move 'Untitled - Paint' client
            Mouse.StartDragging(uIUntitledPaintClient1, new Point(173, 98));
            Mouse.StopDragging(uIUntitledPaintClient1, 323, 219);
        }
        
        #region Properties
        public UIUntitledPaintWindow UIUntitledPaintWindow
        {
            get
            {
                if ((this.mUIUntitledPaintWindow == null))
                {
                    this.mUIUntitledPaintWindow = new UIUntitledPaintWindow();
                }
                return this.mUIUntitledPaintWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIUntitledPaintWindow mUIUntitledPaintWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIUntitledPaintWindow : WinWindow
    {
        
        public UIUntitledPaintWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Untitled - Paint";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MSPaintApp";
            this.WindowTitles.Add("Untitled - Paint");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "9249";
            this.WindowTitles.Add("Untitled - Paint");
            #endregion
        }
        
        #region Properties
        public WinClient UIUntitledPaintClient
        {
            get
            {
                if ((this.mUIUntitledPaintClient == null))
                {
                    this.mUIUntitledPaintClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIUntitledPaintClient.WindowTitles.Add("Untitled - Paint");
                    #endregion
                }
                return this.mUIUntitledPaintClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIUntitledPaintClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ribbon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NetUIHWND";
            this.WindowTitles.Add("Untitled - Paint");
            #endregion
        }
        
        #region Properties
        public UIToolsToolBar UIToolsToolBar
        {
            get
            {
                if ((this.mUIToolsToolBar == null))
                {
                    this.mUIToolsToolBar = new UIToolsToolBar(this);
                }
                return this.mUIToolsToolBar;
            }
        }
        
        public UIColorsToolBar UIColorsToolBar
        {
            get
            {
                if ((this.mUIColorsToolBar == null))
                {
                    this.mUIColorsToolBar = new UIColorsToolBar(this);
                }
                return this.mUIColorsToolBar;
            }
        }
        
        public UIShapesClient UIShapesClient
        {
            get
            {
                if ((this.mUIShapesClient == null))
                {
                    this.mUIShapesClient = new UIShapesClient(this);
                }
                return this.mUIShapesClient;
            }
        }
        #endregion
        
        #region Fields
        private UIToolsToolBar mUIToolsToolBar;
        
        private UIColorsToolBar mUIColorsToolBar;
        
        private UIShapesClient mUIShapesClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIToolsToolBar : WinToolBar
    {
        
        public UIToolsToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Tools";
            this.WindowTitles.Add("Untitled - Paint");
            #endregion
        }
        
        #region Properties
        public WinButton UIFillwithcolorButton
        {
            get
            {
                if ((this.mUIFillwithcolorButton == null))
                {
                    this.mUIFillwithcolorButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFillwithcolorButton.SearchProperties[WinButton.PropertyNames.Name] = "Fill with color";
                    this.mUIFillwithcolorButton.WindowTitles.Add("Untitled - Paint");
                    #endregion
                }
                return this.mUIFillwithcolorButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIFillwithcolorButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIColorsToolBar : WinToolBar
    {
        
        public UIColorsToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Colors";
            this.WindowTitles.Add("Untitled - Paint");
            #endregion
        }
        
        #region Properties
        public WinGroup UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIItemGroup.WindowTitles.Add("Untitled - Paint");
                    #endregion
                }
                return this.mUIItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinGroup mUIItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIShapesClient : WinClient
    {
        
        public UIShapesClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Untitled - Paint");
            #endregion
        }
        
        #region Properties
        public WinListItem UIOvalListItem
        {
            get
            {
                if ((this.mUIOvalListItem == null))
                {
                    this.mUIOvalListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIOvalListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Oval";
                    this.mUIOvalListItem.WindowTitles.Add("Untitled - Paint");
                    #endregion
                }
                return this.mUIOvalListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIOvalListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "Afx:", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Untitled - Paint");
            #endregion
        }
        
        #region Properties
        public WinClient UIUntitledPaintClient
        {
            get
            {
                if ((this.mUIUntitledPaintClient == null))
                {
                    this.mUIUntitledPaintClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIUntitledPaintClient.WindowTitles.Add("Untitled - Paint");
                    #endregion
                }
                return this.mUIUntitledPaintClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIUntitledPaintClient;
        #endregion
    }
}
